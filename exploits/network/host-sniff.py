from core.modular import Module
from scapy.all import *

class Exploit(Module):

    def __init__(self):
        """
        Initialize an Exploit object with default attributes.

        The attributes 'name', 'description', 'author', and 'creation_date' are initialized
        with example values for demonstration purposes.
        """
        self.name           = "host-sniff"
        self.description    = "A simple packet sniffer using Scapy."
        self.author         = "oromos"
        self.creation_date  = "15-11-2023"

    def execute(self):
        """
        Implement IP packet sniffing logic using Scapy.
        """
        try:
            interface = input("Enter the network interface to sniff (e.g., eth0): ")

            print(f"Sniffing on interface {interface} for all packets...")
            sniff(iface=interface, prn=self.packet_handler)

        except KeyboardInterrupt:
            print("Sniffing stopped.")

    def packet_handler(self, packet):
        """
        Handle each captured packet.
        This method will be called for each packet captured by the sniffer.
        You can customize the processing logic here.
        """
        print(f"Packet captured: {packet.summary()}")
